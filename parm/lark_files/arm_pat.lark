CAPTURE: CNAME

wildcard_m: "*" [":" CAPTURE]
wildcard_s: "@" [":" CAPTURE]
wildcard_o: "?" [":" CAPTURE]


identifier: CAPTURE


immediate_pat: "#" wildcard_s -> immediate_wildcard
             | "#" NUM -> immediate_value


address_pat: NUM -> address
           | CAPTURE -> label


reg_pat: reg
       | wildcard_s

shift_op_pat: wildcard_s -> shift_op_wildcard
            | SHIFT_OP -> shift_op

shift_val_pat: wildcard_s -> shift_val_wildcard
             | SHIFT_VAL -> shift_val

shift_pat: shift_op_pat "#" shift_val_pat

shifted_reg_pat: reg_pat ["," shift_pat]

pre_indexed: "!"
maybe_pre_indexed: wildcard_o
pre_index_pat: pre_indexed
             | maybe_pre_indexed

post_index_pat: "," mem_offset_optional_pat

mem_offset_pat: wildcard_s
              | immediate_pat
              | reg ["," shift_pat] -> shifted_reg_offset_pat

mem_offset_optional_pat: mem_offset_pat
                       | wildcard_o

mem_single_pat: "[" wildcard_m "]" ([pre_index_pat] | [post_index_pat])
              | "[" wildcard_m "]" wildcard_o "," wildcard_o
              | "[" reg_pat "]" [post_index_pat]
              | "[" reg_pat "," mem_offset_pat "]" [pre_indexed]
              | "[" reg_pat "," mem_offset_optional_pat "]" maybe_pre_indexed

reg_range_pat: reg_pat "-" reg_pat
_mem_multi_pat_1: (reg_pat | reg_range_pat | wildcard_m)
_mem_multi_pat_2: (reg_pat | reg_range_pat) ["," _mem_multi_pat_1]
mem_multi_pat: "{" _mem_multi_pat_1 ("," _mem_multi_pat_2)* "}"

operands_pat: reg_pat ["," shifted_reg_pat] ["," wildcard_m]
            | reg_pat "," mem_single_pat
            | reg_pat "," mem_multi_pat

OPCODE_WILDCARD: "*"

opcode_wildcard: OPCODE_WILDCARD [":" CAPTURE]

instruction_pat: opcode_wildcard _POST_OPCODE operands_pat -> wildcard_op
               | OPCODE_MOV _POST_OPCODE reg_pat "," shifted_reg_pat -> mov_op

_COMMENT: /\/\/[^\n]*/

ONE_LINER: /[^\n]+/

special_command: "pattern" identifier "{" "\n" block_pat "\n" "}" -> pattern_def
               | "var" identifier -> var_def

command_pat: instruction_pat [_COMMENT] -> instruction_line
           | "!" ONE_LINER -> uni_code
           | "$" ONE_LINER -> multi_code
           | "%" special_command

line_pat: command_pat -> lone_command
        | address_pat ":" [_COMMENT] -> lone_address
        | address_pat ":" command_pat -> addressed_command

block_pat: line_pat ("\n"+ line_pat)* "\n"*

%import .arm.NUM
%import .arm.SHIFT_OP
%import .arm.SHIFT_VAL
%import .arm._POST_OPCODE

%import .arm.OPCODE_MOV

%import .arm.reg

%import common.WS_INLINE -> _WS
%import common.CNAME
